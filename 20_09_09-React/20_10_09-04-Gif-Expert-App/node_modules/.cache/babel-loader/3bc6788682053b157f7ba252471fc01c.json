{"ast":null,"code":"import _toConsumableArray from\"/Users/franciscojaviermartinezduran/Documents/Programacion/Personales/React/20_09_09-React/20_10_09-04-Gif-Expert-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/franciscojaviermartinezduran/Documents/Programacion/Personales/React/20_09_09-React/20_10_09-04-Gif-Expert-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import PropTypes from'prop-types';export var AddCategory=function AddCategory(_ref){var setcategories=_ref.setcategories;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];/** Estas son las dos funciones que tiene el inputvalue  */var handleInputChange=function handleInputChange(e){setInputValue(e.target.value);/** Esto me permite cambiar el texto */};var handleSubmit=function handleSubmit(e){/** Aqui hacemos la peticion para que salga en el DOM  */e.preventDefault();/** Esto evita el refresh de la pagina */if(inputValue.trim().length>2){setcategories(function(cats){return[inputValue].concat(_toConsumableArray(cats));});setInputValue('');}};return/*#__PURE__*/ (/** Aqui directamente ya estamos en el DOM */ //** Aqui le decimo que va a responder a handleSubmit */\nReact.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:inputValue,onChange:handleInputChange/** Aqui le doy el valor para cambiarlo */})));};AddCategory.prototype={/** Para que utilicen nuestro componente con el pequeño candado con los argumentos que estoy esperando  */setcategories:PropTypes.func.isRequired};","map":{"version":3,"sources":["/Users/franciscojaviermartinezduran/Documents/Programacion/Personales/React/20_09_09-React/20_10_09-04-Gif-Expert-App/src/components/AddCategory.js"],"names":["React","useState","PropTypes","AddCategory","setcategories","inputValue","setInputValue","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","length","cats","prototype","func","isRequired"],"mappings":"geAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAqB,IAAnBC,CAAAA,aAAmB,MAAnBA,aAAmB,eAERH,QAAQ,CAAC,EAAD,CAFA,wCAErCI,UAFqC,eAEzBC,aAFyB,eAEK,2DAEjD,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC7BF,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CAA8B,uCACjC,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,CAAD,CAAO,CAAE,yDAC1BA,CAAC,CAACI,cAAF,GAAoB,yCAEpB,GAAGP,UAAU,CAACQ,IAAX,GAAkBC,MAAlB,CAA2B,CAA9B,CAAgC,CAC5BV,aAAa,CAAC,SAAAW,IAAI,SAAKV,UAAL,4BAAoBU,IAApB,IAAL,CAAb,CACAT,aAAa,CAAC,EAAD,CAAb,CACH,CACJ,CAPD,CASA,oBAAS,8CAAT,CAEI;AACA,4BAAM,QAAQ,CAAEK,YAAhB,eACI,6BACI,IAAI,CAAC,MADT,CAEI,KAAK,CAAEN,UAFX,CAGI,QAAQ,CAAEE,iBAAmB,0CAHjC,EADJ,CAHJ,EAYH,CA7BM,CA+BPJ,WAAW,CAACa,SAAZ,CAAwB,CAAE,0GACtBZ,aAAa,CAAEF,SAAS,CAACe,IAAV,CAAeC,UADV,CAAxB","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setcategories}) => {\n\n    const [inputValue, setInputValue] = useState('') /** Estas son las dos funciones que tiene el inputvalue  */\n\n    const handleInputChange = (e) => { \n        setInputValue(e.target.value) /** Esto me permite cambiar el texto */\n    }\n\n    const handleSubmit = (e) => { /** Aqui hacemos la peticion para que salga en el DOM  */\n        e.preventDefault(); /** Esto evita el refresh de la pagina */\n\n        if(inputValue.trim().length > 2){\n            setcategories(cats => [inputValue, ...cats,]);\n            setInputValue('');\n        }\n    }\n\n    return ( /** Aqui directamente ya estamos en el DOM */\n\n        //** Aqui le decimo que va a responder a handleSubmit */\n        <form onSubmit={handleSubmit}>  \n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange} /** Aqui le doy el valor para cambiarlo */\n                />\n            </form>\n\n    )\n}\n\nAddCategory.prototype = { /** Para que utilicen nuestro componente con el pequeño candado con los argumentos que estoy esperando  */\n    setcategories: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}